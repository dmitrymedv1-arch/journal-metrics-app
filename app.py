import streamlit as st
import pandas as pd
from journal_analyzer import (
    calculate_metrics_fast,
    calculate_metrics_enhanced,
    calculate_metrics_dynamic,
    validate_issn,
    get_journal_name_from_issn,
    clear_cache
)
from datetime import date
import base64
import os

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(page_title="–ê–Ω–∞–ª–∏–∑ –∂—É—Ä–Ω–∞–ª–æ–≤ üìä", page_icon="üìä", layout="wide")

# –°—Ç–∏–ª–∏ CSS
st.markdown("""
<style>
    .main-header {
        font-size: 2.5em;
        color: #2c3e50;
        text-align: center;
        margin-bottom: 20px;
    }
    .section-header {
        font-size: 1.8em;
        color: #34495e;
        margin-top: 20px;
    }
    .journal-name-box {
        background-color: #e8f4f8;
        padding: 10px;
        border-radius: 5px;
        margin-bottom: 15px;
    }
    .forecast-box {
        background-color: #d4edda;
        padding: 10px;
        border-radius: 5px;
    }
    .citescore-forecast-box {
        background-color: #d1ecf1;
        padding: 10px;
        border-radius: 5px;
    }
    .stButton>button {
        background-color: #007bff;
        color: white;
        border-radius: 5px;
    }
    .stButton>button:hover {
        background-color: #0056b3;
    }
</style>
""", unsafe_allow_html=True)

# –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
st.markdown('<h1 class="main-header">üìä –ê–Ω–∞–ª–∏–∑ –º–µ—Ç—Ä–∏–∫ –Ω–∞—É—á–Ω—ã—Ö –∂—É—Ä–Ω–∞–ª–æ–≤</h1>', unsafe_allow_html=True)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞
if 'progress' not in st.session_state:
    st.session_state.progress = 0.0

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞
def update_progress(progress):
    st.session_state.progress = progress
    progress_bar.progress(progress)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ—Å–Ω–æ–≤–Ω—ã—Ö –º–µ—Ç—Ä–∏–∫
def display_main_metrics(result, is_precise_mode, is_dynamic_mode):
    """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö –º–µ—Ç—Ä–∏–∫"""
    
    st.markdown('<h3 class="section-header">üéØ –ò–º–ø–∞–∫—Ç-–§–∞–∫—Ç–æ—Ä</h3>', unsafe_allow_html=True)
    
    col1, col2, col3 = st.columns(3)
    
    with col1:
        st.metric(
            "–¢–µ–∫—É—â–∏–π –ò–§", 
            f"{result.get('current_if', 0):.2f}",
            help="–¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ü–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏–π –≤ –ø–µ—Ä–∏–æ–¥–µ"
        )
    
    with col2:
        st.metric(
            "–°—Ç–∞—Ç—å–∏ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞", 
            f"{result.get('total_articles_if', 0)}",
            help=f"–°—Ç–∞—Ç—å–∏ –∑–∞ {result.get('if_publication_period', [2023, 2024])[0]}‚Äì{result.get('if_publication_period', [2023, 2024])[1]}" if is_dynamic_mode else f"–°—Ç–∞—Ç—å–∏ –∑–∞ {result.get('if_publication_years', [2023, 2024])[0]}‚Äì{result.get('if_publication_years', [2023, 2024])[1]}"
        )
    
    with col3:
        st.metric(
            "–¶–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏–π", 
            f"{result.get('total_cites_if', 0)}",
            help="–¶–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞ 2025 –≥–æ–¥" if is_precise_mode else f"–¶–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞ {result.get('if_citation_period', [2023, 2024])[0]}‚Äì{result.get('if_citation_period', [2023, 2024])[1]}" if is_dynamic_mode else f"–¶–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞ {result.get('if_publication_years', [2023, 2024])[0]}‚Äì{result.get('if_publication_years', [2023, 2024])[1]}"
        )
    
    if is_precise_mode and not is_dynamic_mode:
        st.markdown("#### –ü—Ä–æ–≥–Ω–æ–∑—ã –ò–º–ø–∞–∫—Ç-–§–∞–∫—Ç–æ—Ä–∞ –Ω–∞ –∫–æ–Ω–µ—Ü 2025")
        forecast_col1, forecast_col2, forecast_col3 = st.columns(3)
        
        with forecast_col1:
            st.markdown('<div class="forecast-box">', unsafe_allow_html=True)
            st.metric("–ö–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω—ã–π", f"{result.get('if_forecasts', {}).get('conservative', 0):.2f}")
            st.markdown('</div>', unsafe_allow_html=True)
        
        with forecast_col2:
            st.markdown('<div class="forecast-box">', unsafe_allow_html=True)
            st.metric("–°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π", f"{result.get('if_forecasts', {}).get('balanced', 0):.2f}")
            st.markdown('</div>', unsafe_allow_html=True)
        
        with forecast_col3:
            st.markdown('<div class="forecast-box">', unsafe_allow_html=True)
            st.metric("–û–ø—Ç–∏–º–∏—Å—Ç–∏—á–Ω—ã–π", f"{result.get('if_forecasts', {}).get('optimistic', 0):.2f}")
            st.markdown('</div>', unsafe_allow_html=True)
    
    st.markdown("---")
    
    st.markdown('<h3 class="section-header">üìä CiteScore</h3>', unsafe_allow_html=True)
    
    if is_dynamic_mode:
        col1, col2, col3, col4 = st.columns(4)
        
        with col1:
            st.metric(
                "CiteScore (OpenAlex)", 
                f"{result.get('current_citescore_openalex', 0):.2f}",
                help="–ù–∞ –æ—Å–Ω–æ–≤–µ —Ü–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏–π OpenAlex –∑–∞ –ø–µ—Ä–∏–æ–¥ 52‚Äì4 –º–µ—Å—è—Ü–µ–≤ –Ω–∞–∑–∞–¥"
            )
        with col2:
            st.metric(
                "CiteScore (Crossref)", 
                f"{result.get('current_citescore_crossref', 0):.2f}",
                help="–ù–∞ –æ—Å–Ω–æ–≤–µ –≤—Å–µ—Ö —Ü–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏–π Crossref"
            )
        with col3:
            st.metric(
                "–°—Ç–∞—Ç—å–∏ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞", 
                f"{result.get('total_articles_cs', 0)}",
                help=f"–°—Ç–∞—Ç—å–∏ –∑–∞ {result.get('cs_publication_period', [2021, 2025])[0]}‚Äì{result.get('cs_publication_period', [2021, 2025])[1]}"
            )
        with col4:
            st.metric(
                "–¶–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏–π (OpenAlex)", 
                f"{result.get('total_cites_cs_openalex', 0)}",
                help=f"–¶–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞ {result.get('cs_citation_period', [2021, 2025])[0]}‚Äì{result.get('cs_citation_period', [2021, 2025])[1]}"
            )
        
        # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã cs_citation_data
        if result.get('cs_citation_data'):
            st.markdown("#### –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è —Ü–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏–π CiteScore")
            cs_df = pd.DataFrame(result['cs_citation_data'])
            cs_df = cs_df.rename(columns={
                'DOI': 'DOI',
                '–î–∞—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏': '–î–∞—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏',
                '–¶–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (Crossref)': '–¶–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (Crossref)',
                '–¶–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (OpenAlex)': '–¶–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (OpenAlex)',
                '–°–∞–º–æ—Ü–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (OpenAlex)': '–°–∞–º–æ—Ü–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (OpenAlex)',
                '–¶–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –ø–µ—Ä–∏–æ–¥–µ 52‚Äì4 –º–µ—Å—è—Ü–µ–≤ –Ω–∞–∑–∞–¥': '–¶–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –ø–µ—Ä–∏–æ–¥–µ (52‚Äì4 –º–µ—Å.)'
            })
            st.dataframe(cs_df, use_container_width=True)
        else:
            st.warning("‚ö†Ô∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã CiteScore. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–ª–∏—á–∏–µ —Å—Ç–∞—Ç–µ–π –∑–∞ –ø–µ—Ä–∏–æ–¥ 52‚Äì4 –º–µ—Å—è—Ü–µ–≤ –Ω–∞–∑–∞–¥.")
    
    else:
        col1, col2, col3 = st.columns(3)
        
        with col1:
            st.metric(
                "–¢–µ–∫—É—â–∏–π CiteScore", 
                f"{result.get('current_citescore', 0):.2f}",
                help="–ù–∞ –æ—Å–Ω–æ–≤–µ —Ü–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏–π –∑–∞ 18‚Äì6 –º–µ—Å—è—Ü–µ–≤ –Ω–∞–∑–∞–¥" if is_precise_mode else "–ù–∞ –æ—Å–Ω–æ–≤–µ —Ü–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –≥–æ–¥—ã"
            )
        
        with col2:
            st.metric(
                "–°—Ç–∞—Ç—å–∏ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞", 
                f"{result.get('total_articles_cs', 0)}",
                help=f"–°—Ç–∞—Ç—å–∏ –∑–∞ {result.get('cs_publication_period', [2021, 2024])[0]}‚Äì{result.get('cs_publication_period', [2021, 2024])[-1]}" if is_dynamic_mode else f"–°—Ç–∞—Ç—å–∏ –∑–∞ {result.get('cs_publication_years', [2021, 2024])[0]}‚Äì{result.get('cs_publication_years', [2021, 2024])[-1]}"
            )
        
        with col3:
            st.metric(
                "–¶–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏–π", 
                f"{result.get('total_cites_cs', 0)}",
                help=f"–¶–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞ {result.get('cs_citation_period', [2021, 2024])[0]}‚Äì{result.get('cs_citation_period', [2021, 2024])[-1]}" if is_dynamic_mode else f"–¶–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞ {result.get('cs_publication_years', [2021, 2024])[0]}‚Äì{result.get('cs_publication_years', [2021, 2024])[-1]}"
            )
        
        # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã cs_citation_data
        if result.get('cs_citation_data'):
            st.markdown("#### –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è —Ü–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏–π CiteScore")
            cs_df = pd.DataFrame(result['cs_citation_data'])
            cs_df = cs_df.rename(columns={
                'DOI': 'DOI',
                '–î–∞—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏': '–î–∞—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏',
                '–¶–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (Crossref)': '–¶–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (Crossref)',
                '–¶–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (OpenAlex)': '–¶–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (OpenAlex)',
                '–°–∞–º–æ—Ü–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (OpenAlex)': '–°–∞–º–æ—Ü–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (OpenAlex)',
                '–¶–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –ø–µ—Ä–∏–æ–¥–µ 18‚Äì6 –º–µ—Å—è—Ü–µ–≤ –Ω–∞–∑–∞–¥': '–¶–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –ø–µ—Ä–∏–æ–¥–µ'
            })
            st.dataframe(cs_df, use_container_width=True)
        else:
            st.warning("‚ö†Ô∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã CiteScore. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–ª–∏—á–∏–µ —Å—Ç–∞—Ç–µ–π –∑–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥.")
    
    if is_precise_mode and not is_dynamic_mode:
        st.markdown("#### –ü—Ä–æ–≥–Ω–æ–∑—ã CiteScore –Ω–∞ –∫–æ–Ω–µ—Ü 2025")
        forecast_col1, forecast_col2, forecast_col3 = st.columns(3)
        
        with forecast_col1:
            st.markdown('<div class="citescore-forecast-box">', unsafe_allow_html=True)
            st.metric("–ö–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω—ã–π", f"{result.get('citescore_forecasts', {}).get('conservative', 0):.2f}")
            st.markdown('</div>', unsafe_allow_html=True)
        
        with forecast_col2:
            st.markdown('<div class="citescore-forecast-box">', unsafe_allow_html=True)
            st.metric("–°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π", f"{result.get('citescore_forecasts', {}).get('balanced', 0):.2f}")
            st.markdown('</div>', unsafe_allow_html=True)
        
        with forecast_col3:
            st.markdown('<div class="citescore-forecast-box">', unsafe_allow_html=True)
            st.metric("–û–ø—Ç–∏–º–∏—Å—Ç–∏—á–Ω—ã–π", f"{result.get('citescore_forecasts', {}).get('optimistic', 0):.2f}")
            st.markdown('</div>', unsafe_allow_html=True)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
def display_detailed_analysis(result, is_dynamic_mode):
    """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞"""
    
    st.markdown('<h3 class="section-header">üîç –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑</h3>', unsafe_allow_html=True)
    
    col1, col2 = st.columns(2)
    
    with col1:
        st.markdown("#### –°–∞–º–æ—Ü–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
        st.metric("–î–æ–ª—è —Å–∞–º–æ—Ü–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏–π (–ò–§)", f"{result.get('self_citation_rate_if', 0):.2%}",
                  help="–î–æ–ª—è —Å–∞–º–æ—Ü–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏–π –≤ –æ–±—â–µ–º –æ–±—ä–µ–º–µ —Ü–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏–π –¥–ª—è –ò–§")
        st.metric("–î–æ–ª—è —Å–∞–º–æ—Ü–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏–π (CiteScore)", f"{result.get('self_citation_rate_cs', 0):.2%}",
                  help="–î–æ–ª—è —Å–∞–º–æ—Ü–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏–π –≤ –æ–±—â–µ–º –æ–±—ä–µ–º–µ —Ü–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏–π –¥–ª—è CiteScore")
    
    with col2:
        st.markdown("#### –°–µ–∑–æ–Ω–Ω—ã–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã")
        if result.get('citation_distribution'):
            dist_df = pd.DataFrame.from_dict(
                result['citation_distribution'], orient='index', columns=['–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç']
            ).reset_index().rename(columns={'index': '–ú–µ—Å—è—Ü'})
            st.dataframe(dist_df, use_container_width=True)
        else:
            st.warning("‚ö†Ô∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ —Å–µ–∑–æ–Ω–Ω—ã—Ö –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞—Ö")
    
    # –¢–∞–±–ª–∏—Ü–∞ –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏ —Ü–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏–π –¥–ª—è –ò–§
    if result.get('if_citation_data'):
        st.markdown("#### –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è —Ü–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏–π –ò–º–ø–∞–∫—Ç-–§–∞–∫—Ç–æ—Ä–∞")
        if_df = pd.DataFrame(result['if_citation_data'])
        if_df = if_df.rename(columns={
            'DOI': 'DOI',
            '–î–∞—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏': '–î–∞—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏',
            '–¶–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏—è': '–¶–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏—è',
            '–°–∞–º–æ—Ü–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏—è': '–°–∞–º–æ—Ü–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏—è'
        })
        st.dataframe(if_df, use_container_width=True)
    else:
        st.warning("‚ö†Ô∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã –ò–º–ø–∞–∫—Ç-–§–∞–∫—Ç–æ—Ä–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–ª–∏—á–∏–µ —Å—Ç–∞—Ç–µ–π –∑–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥.")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ CSV
def export_to_csv(result):
    """–≠–∫—Å–ø–æ—Ä—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ CSV"""
    if result.get('if_citation_data'):
        if_df = pd.DataFrame(result['if_citation_data'])
        if_df['–¢–∏–ø'] = '–ò–º–ø–∞–∫—Ç-–§–∞–∫—Ç–æ—Ä'
    else:
        if_df = pd.DataFrame()
    
    if result.get('cs_citation_data'):
        cs_df = pd.DataFrame(result['cs_citation_data'])
        cs_df['–¢–∏–ø'] = 'CiteScore'
    else:
        cs_df = pd.DataFrame()
    
    combined_df = pd.concat([if_df, cs_df], ignore_index=True)
    
    if not combined_df.empty:
        csv = combined_df.to_csv(index=False, encoding='utf-8-sig')
        b64 = base64.b64encode(csv.encode('utf-8-sig')).decode()
        href = f'<a href="data:file/csv;base64,{b64}" download="journal_analysis_{result.get("issn", "unknown")}.csv">–°–∫–∞—á–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ CSV</a>'
        st.markdown(href, unsafe_allow_html=True)
    else:
        st.warning("‚ö†Ô∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞")

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
def main():
    # –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å
    with st.sidebar:
        st.header("üîç –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∞–Ω–∞–ª–∏–∑–∞")
        
        issn_input = st.text_input(
            "ISSN –∂—É—Ä–Ω–∞–ª–∞ (—Ñ–æ—Ä–º–∞—Ç: XXXX-XXXX):",
            value="2411-1414",
            placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 1548-7660",
            help="–í–≤–µ–¥–∏—Ç–µ ISSN –∂—É—Ä–Ω–∞–ª–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ XXXX-XXXX"
        )
        
        if issn_input and validate_issn(issn_input):
            with st.spinner("üîç –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –∂—É—Ä–Ω–∞–ª–∞..."):
                detected_name = get_journal_name_from_issn(issn_input)
                st.markdown(f'<div class="journal-name-box"><strong>üìö –ù–∞–π–¥–µ–Ω –∂—É—Ä–Ω–∞–ª:</strong> {detected_name}</div>', unsafe_allow_html=True)
        else:
            detected_name = "–ù–µ —É–∫–∞–∑–∞–Ω–æ"
        
        journal_field = st.selectbox(
            "–û–±–ª–∞—Å—Ç—å –∂—É—Ä–Ω–∞–ª–∞:",
            options=["natural_sciences", "social_sciences", "mathematics", "biological_sciences", "general"],
            format_func=lambda x: {
                "natural_sciences": "–ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –Ω–∞—É–∫–∏",
                "social_sciences": "–°–æ—Ü–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –Ω–∞—É–∫–∏",
                "mathematics": "–ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –Ω–∞—É–∫–∏",
                "biological_sciences": "–ë–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –Ω–∞—É–∫–∏",
                "general": "–û–±—â–∞—è"
            }[x],
            help="–í—ã–±–µ—Ä–∏—Ç–µ –æ–±–ª–∞—Å—Ç—å –∂—É—Ä–Ω–∞–ª–∞ –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ —Ä–∞—Å—á–µ—Ç–∞ —Å–µ–∑–æ–Ω–Ω—ã—Ö –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤"
        )
        
        analysis_mode = st.radio(
            "–†–µ–∂–∏–º –∞–Ω–∞–ª–∏–∑–∞:",
            ["üöÄ –ë—ã—Å—Ç—Ä—ã–π –∞–Ω–∞–ª–∏–∑ (Fast Analysis)",
             "üéØ –¢–æ—á–Ω—ã–π –∞–Ω–∞–ª–∏–∑ (Precise Analysis)",
             "üåê –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ (Dynamic Analysis)"],
            help="–ë—ã—Å—Ç—Ä—ã–π: 10-30 —Å–µ–∫, –¢–æ—á–Ω—ã–π/–î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π: 30-60 —Å–µ–∫"
        )
        
        use_cache = st.checkbox("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫—ç—à", value=True, help="–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è")
        
        use_parallel = st.checkbox("–ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞", value=True, help="–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–Ω–æ–≥–æ–ø–æ—Ç–æ—á–Ω–æ—Å—Ç—å –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è")
        
        max_workers = st.slider("–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Ç–æ–∫–æ–≤:", min_value=1, max_value=50, value=20, help="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Ç–æ–∫–æ–≤ –¥–ª—è –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏")
        
        if st.button("üóë –û—á–∏—Å—Ç–∏—Ç—å –∫—ç—à"):
            clear_cache()
            st.success("–ö—ç—à –æ—á–∏—â–µ–Ω!")
        
        st.markdown("---")
        st.markdown("**‚ÑπÔ∏è –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:**")
        st.markdown("- –í–≤–µ–¥–∏—Ç–µ ISSN –≤ —Ñ–æ—Ä–º–∞—Ç–µ XXXX-XXXX.")
        st.markdown("- –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º –∞–Ω–∞–ª–∏–∑–∞.")
        st.markdown("- –î–ª—è —Ç–æ—á–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ —Ç—Ä–µ–±—É–µ—Ç—Å—è –±–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏.")
        st.markdown("- –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –≥–∏–±–∫–∏–µ –ø–µ—Ä–∏–æ–¥—ã.")
    
    # –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
    progress_bar = st.progress(st.session_state.progress)
    
    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∞–Ω–∞–ª–∏–∑–∞
    if st.button("üöÄ –ù–∞—á–∞—Ç—å –∞–Ω–∞–ª–∏–∑"):
        if not validate_issn(issn_input):
            st.error("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ISSN. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç XXXX-XXXX.")
            return
        
        real_journal_name = detected_name
        is_precise_mode = "–¢–æ—á–Ω—ã–π –∞–Ω–∞–ª–∏–∑" in analysis_mode
        is_dynamic_mode = "–î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑" in analysis_mode
        
        try:
            with st.spinner("‚è≥ –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∞–Ω–∞–ª–∏–∑..."):
                if is_dynamic_mode:
                    result = calculate_metrics_dynamic(
                        issn_input, 
                        real_journal_name, 
                        use_cache, 
                        progress_callback=update_progress,
                        use_parallel=use_parallel,
                        max_workers=max_workers,
                        journal_field=journal_field
                    )
                elif is_precise_mode:
                    result = calculate_metrics_enhanced(
                        issn_input, 
                        real_journal_name, 
                        use_cache, 
                        progress_callback=update_progress,
                        use_parallel=use_parallel,
                        max_workers=max_workers,
                        journal_field=journal_field
                    )
                else:
                    result = calculate_metrics_fast(
                        issn_input, 
                        real_journal_name, 
                        use_cache, 
                        progress_callback=update_progress
                    )
            
            if result is None:
                st.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ ISSN –∏–ª–∏ –Ω–∞–ª–∏—á–∏–µ —Å—Ç–∞—Ç–µ–π –≤ Crossref.")
                st.info("–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥—Ä—É–≥–æ–π ISSN (–Ω–∞–ø—Ä–∏–º–µ—Ä, 0028-0836 –¥–ª—è Nature) –∏–ª–∏ –æ—á–∏—Å—Ç–∏—Ç—å –∫—ç—à.")
                st.markdown("**–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã –æ—à–∏–±–∫–∏:**")
                st.markdown("- –ñ—É—Ä–Ω–∞–ª –Ω–µ –∏–º–µ–µ—Ç —Å—Ç–∞—Ç–µ–π –∑–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–µ –ø–µ—Ä–∏–æ–¥—ã –≤ Crossref.")
                st.markdown("- –ü—Ä–æ–±–ª–µ–º—ã —Å API (–Ω–∞–ø—Ä–∏–º–µ—Ä, –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤).")
                st.markdown("- –£—Å—Ç–∞—Ä–µ–≤—à–∏–π –∫—ç—à. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å –∫—ç—à.")
                st.markdown("- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–ª–∏—á–∏–µ —Å—Ç–∞—Ç–µ–π –∑–∞ –ø–µ—Ä–∏–æ–¥ 2023‚Äì2024 (–¥–ª—è –ò–§) –∏–ª–∏ 2021‚Äì2025 (–¥–ª—è CiteScore).")
                return
            
            # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
            st.markdown(f"**–ê–Ω–∞–ª–∏–∑ –∂—É—Ä–Ω–∞–ª–∞:** {result.get('journal_name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')} (ISSN: {result.get('issn', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')})")
            st.markdown(f"**–î–∞—Ç–∞ –∞–Ω–∞–ª–∏–∑–∞:** {result.get('analysis_date', date.today())}")
            st.markdown(f"**–†–µ–∂–∏–º –∞–Ω–∞–ª–∏–∑–∞:** {result.get('mode', '–ù–µ —É–∫–∞–∑–∞–Ω')}")
            st.markdown(f"**–û–±–ª–∞—Å—Ç—å –∂—É—Ä–Ω–∞–ª–∞:** {journal_field.replace('_', ' ').title()}")
            
            # –í–∫–ª–∞–¥–∫–∏ –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
            tab1, tab2 = st.tabs(["üìä –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏", "üîç –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑"])
            
            with tab1:
                display_main_metrics(result, is_precise_mode, is_dynamic_mode)
            
            with tab2:
                display_detailed_analysis(result, is_dynamic_mode)
            
            # –ö–Ω–æ–ø–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞
            st.markdown("---")
            st.markdown("#### üíæ –≠–∫—Å–ø–æ—Ä—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
            export_to_csv(result)
        
        except Exception as e:
            st.error(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ: {str(e)}")
            st.info("–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å –∫—ç—à –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥—Ä—É–≥–æ–π ISSN (–Ω–∞–ø—Ä–∏–º–µ—Ä, 0028-0836 –¥–ª—è Nature).")
            st.markdown("**–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã –æ—à–∏–±–∫–∏:**")
            st.markdown("- –ü—Ä–æ–±–ª–µ–º—ã —Å API Crossref –∏–ª–∏ OpenAlex.")
            st.markdown("- –£—Å—Ç–∞—Ä–µ–≤—à–∏–π –∫—ç—à. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å –∫—ç—à.")
            st.markdown("- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–ª–∏—á–∏–µ —Å—Ç–∞—Ç–µ–π –∑–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–µ –ø–µ—Ä–∏–æ–¥—ã.")
            st.markdown(f"**–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –æ—à–∏–±–∫–∏:** {str(e)}")
        
        finally:
            st.session_state.progress = 1.0
            progress_bar.progress(1.0)

# –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
if __name__ == "__main__":
    main()
