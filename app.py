import streamlit as st
import pandas as pd
import numpy as np
import time
from datetime import datetime
import calendar
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
sys.path.append(os.path.dirname(__file__))

try:
    import plotly.express as px
    import plotly.graph_objects as go
    PLOTLY_AVAILABLE = True
except ImportError:
    PLOTLY_AVAILABLE = False
    st.warning("Plotly –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ì—Ä–∞—Ñ–∏–∫–∏ –±—É–¥—É—Ç –æ—Ç–∫–ª—é—á–µ–Ω—ã.")

try:
    from journal_analyzer import (
        get_issn_by_name, 
        calculate_metrics_enhanced,
        detect_journal_field,
        on_clear_cache_clicked
    )
    JOURNAL_ANALYZER_AVAILABLE = True
except ImportError as e:
    JOURNAL_ANALYZER_AVAILABLE = False
    st.error(f"–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ journal_analyzer: {e}")
    # –°–æ–∑–¥–∞–µ–º –∑–∞–≥–ª—É—à–∫–∏
    def get_issn_by_name(*args, **kwargs):
        return None, None
    def calculate_metrics_enhanced(*args, **kwargs):
        return None
    def detect_journal_field(*args, **kwargs):
        return "general"
    def on_clear_cache_clicked(*args, **kwargs):
        return "–ö—ç—à –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="Journal Metrics Analyzer",
    page_icon="üìä",
    layout="wide",
    initial_sidebar_state="expanded"
)

# –ö–∞—Å—Ç–æ–º–Ω—ã–µ —Å—Ç–∏–ª–∏ CSS
st.markdown("""
<style>
    .main-header {
        font-size: 2.5rem;
        color: #1E88E5;
        text-align: center;
        margin-bottom: 2rem;
    }
    .metric-card {
        background-color: #f8f9fa;
        padding: 1.5rem;
        border-radius: 10px;
        border-left: 4px solid #1E88E5;
        margin-bottom: 1rem;
    }
    .forecast-box {
        background-color: #e3f2fd;
        padding: 1rem;
        border-radius: 8px;
        margin: 0.5rem 0;
    }
    .warning-box {
        background-color: #fff3cd;
        padding: 1rem;
        border-radius: 8px;
        border-left: 4px solid #ffc107;
        margin: 1rem 0;
    }
</style>
""", unsafe_allow_html=True)

def main():
    if not JOURNAL_ANALYZER_AVAILABLE:
        st.warning("‚ö†Ô∏è –†–∞–±–æ—Ç–∞–µ—Ç –≤ —É–ø—Ä–æ—â–µ–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ. –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –º–æ–≥—É—Ç –±—ã—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω—ã.")
    
    # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    st.markdown('<h1 class="main-header">üìä –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –ú–µ—Ç—Ä–∏–∫ –ñ—É—Ä–Ω–∞–ª–∞</h1>', unsafe_allow_html=True)
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ
    with st.expander("‚ÑπÔ∏è –û —Å–∏—Å—Ç–µ–º–µ –∞–Ω–∞–ª–∏–∑–∞"):
        st.markdown("""
        **–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã:**
        - ‚úÖ –†–∞—Å—á–µ—Ç —Ç–µ–∫—É—â–∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π –∏–º–ø–∞–∫—Ç-—Ñ–∞–∫—Ç–æ—Ä–∞ –∏ CiteScore
        - üîÆ –ü—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ—Ç—Ä–∏–∫ –Ω–∞ –∫–æ–Ω–µ—Ü –≥–æ–¥–∞
        - üîç –ê–Ω–∞–ª–∏–∑ —Å–∞–º–æ—Ü–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏–π
        - üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å—Ç–∞—Ç—å—è–º
        - üéØ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ–±–ª–∞—Å—Ç–∏ –∂—É—Ä–Ω–∞–ª–∞
        """)
    
    # –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å –¥–ª—è –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö
    with st.sidebar:
        st.header("üîç –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∞–Ω–∞–ª–∏–∑–∞")
        
        input_type = st.radio(
            "–¢–∏–ø –≤–≤–æ–¥–∞:",
            ["ISSN –∂—É—Ä–Ω–∞–ª–∞", "–ù–∞–∑–≤–∞–Ω–∏–µ –∂—É—Ä–Ω–∞–ª–∞"]
        )
        
        if input_type == "ISSN –∂—É—Ä–Ω–∞–ª–∞":
            issn_input = st.text_input(
                "ISSN (—Ñ–æ—Ä–º–∞—Ç: XXXX-XXXX):",
                value="2411-1414",
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 1548-7660"
            )
            journal_name_input = ""
        else:
            journal_name_input = st.text_input(
                "–ù–∞–∑–≤–∞–Ω–∏–µ –∂—É—Ä–Ω–∞–ª–∞ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º:",
                value="Nature",
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: Nature –∏–ª–∏ Science"
            )
            issn_input = ""
        
        use_cache = st.checkbox("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫—ç—à", value=True)
        
        # –ö–Ω–æ–ø–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∞–Ω–∞–ª–∏–∑–∞
        analyze_button = st.button(
            "üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å –∞–Ω–∞–ª–∏–∑",
            type="primary",
            use_container_width=True
        )
        
        # –ö–Ω–æ–ø–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –∫—ç—à–∞
        if st.button("üßπ –û—á–∏—Å—Ç–∏—Ç—å –∫—ç—à", use_container_width=True):
            result_msg = on_clear_cache_clicked(None)
            st.success(result_msg)
        
        st.markdown("---")
        st.markdown("""
        **–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–∞–Ω–Ω—ã—Ö:**
        - Crossref API
        - –ö—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        """)
    
    # –û—Å–Ω–æ–≤–Ω–∞—è –æ–±–ª–∞—Å—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    if analyze_button:
        if not issn_input and not journal_name_input:
            st.error("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ ISSN –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∂—É—Ä–Ω–∞–ª–∞")
            return
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
        with st.spinner("üîÑ –ó–∞–ø—É—Å–∫ –∞–Ω–∞–ª–∏–∑–∞..."):
            try:
                # –ü–æ–ª—É—á–∞–µ–º ISSN –µ—Å–ª–∏ –≤–≤–µ–¥–µ–Ω–æ –Ω–∞–∑–≤–∞–Ω–∏–µ
                if journal_name_input and not issn_input:
                    with st.status("–ü–æ–∏—Å–∫ –∂—É—Ä–Ω–∞–ª–∞...", expanded=True) as status:
                        st.write(f"–ü–æ–∏—Å–∫ ISSN –¥–ª—è: {journal_name_input}")
                        issn, journal_name = get_issn_by_name(journal_name_input, use_cache)
                        if issn:
                            st.success(f"–ù–∞–π–¥–µ–Ω –∂—É—Ä–Ω–∞–ª: {journal_name} (ISSN: {issn})")
                            status.update(label="–ñ—É—Ä–Ω–∞–ª –Ω–∞–π–¥–µ–Ω!", state="complete")
                        else:
                            st.error("–ñ—É—Ä–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ.")
                            return
                else:
                    issn = issn_input
                    journal_name = "–ù–µ —É–∫–∞–∑–∞–Ω–æ"
                
                # –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∞–Ω–∞–ª–∏–∑
                with st.status("–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–∞...", expanded=True) as status:
                    st.write("üîç –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö –æ —Å—Ç–∞—Ç—å—è—Ö...")
                    st.write("üìä –ê–Ω–∞–ª–∏–∑ —Ü–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏–π...")
                    st.write("üìà –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –ø—Ä–æ–≥–Ω–æ–∑–æ–≤...")
                    
                    result = calculate_metrics_enhanced(issn, journal_name, use_cache)
                    
                    if result is None:
                        st.error("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞. –í–æ–∑–º–æ–∂–Ω–æ, –∂—É—Ä–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ —Å—Ç–∞—Ç—å—è—Ö.")
                        return
                    
                    status.update(label="–ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω!", state="complete")
                
                # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
                display_results(result)
                
            except Exception as e:
                st.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ: {str(e)}")
                st.info("–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥—Ä—É–≥–æ–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∂—É—Ä–Ω–∞–ª–∞")

def display_results(result):
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∞–Ω–∞–ª–∏–∑–∞"""
    
    # –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∂—É—Ä–Ω–∞–ª–µ
    col1, col2, col3 = st.columns(3)
    
    with col1:
        st.metric("–ù–∞–∑–≤–∞–Ω–∏–µ –∂—É—Ä–Ω–∞–ª–∞", result['journal_name'])
    with col2:
        st.metric("ISSN", result['issn'])
    with col3:
        st.metric("–û–±–ª–∞—Å—Ç—å", result['journal_field'])
    
    st.markdown("---")
    
    # –í–∫–ª–∞–¥–∫–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ä–∞–∑–¥–µ–ª–æ–≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    tab1, tab2, tab3 = st.tabs([
        "üìà –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏", 
        "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", 
        "‚öôÔ∏è –ü–∞—Ä–∞–º–µ—Ç—Ä—ã"
    ])
    
    with tab1:
        display_main_metrics(result)
    
    with tab2:
        display_statistics(result)
    
    with tab3:
        display_parameters(result)

def display_main_metrics(result):
    """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö –º–µ—Ç—Ä–∏–∫"""
    
    st.subheader("üéØ –ò–º–ø–∞–∫—Ç-–§–∞–∫—Ç–æ—Ä 2025")
    
    col1, col2, col3 = st.columns(3)
    
    with col1:
        st.metric(
            "–¢–µ–∫—É—â–∏–π –ò–§", 
            f"{result['current_if']:.2f}",
            help="–¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–æ–±—Ä–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö"
        )
    
    with col2:
        st.metric(
            "–°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ–≥–Ω–æ–∑", 
            f"{result['if_forecasts']['balanced']:.2f}",
            help="–ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –∫–æ–Ω–µ—Ü 2025 –≥–æ–¥–∞"
        )
    
    with col3:
        st.metric(
            "–°—Ç–∞—Ç—å–∏ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞", 
            f"{result['total_articles_if']}",
            help=f"–°—Ç–∞—Ç—å–∏ –∑–∞ {result['if_publication_years'][0]}-{result['if_publication_years'][1]}"
        )
    
    # –ü—Ä–æ–≥–Ω–æ–∑—ã –∏–º–ø–∞–∫—Ç-—Ñ–∞–∫—Ç–æ—Ä–∞
    st.markdown("#### –ü—Ä–æ–≥–Ω–æ–∑—ã –ò–º–ø–∞–∫—Ç-–§–∞–∫—Ç–æ—Ä–∞ –Ω–∞ –∫–æ–Ω–µ—Ü 2025")
    
    forecast_col1, forecast_col2, forecast_col3 = st.columns(3)
    
    with forecast_col1:
        st.markdown('<div class="forecast-box">', unsafe_allow_html=True)
        st.metric("–ö–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω—ã–π", f"{result['if_forecasts']['conservative']:.2f}")
        st.markdown('</div>', unsafe_allow_html=True)
    
    with forecast_col2:
        st.markdown('<div class="forecast-box">', unsafe_allow_html=True)
        st.metric("–°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π", f"{result['if_forecasts']['balanced']:.2f}")
        st.markdown('</div>', unsafe_allow_html=True)
    
    with forecast_col3:
        st.markdown('<div class="forecast-box">', unsafe_allow_html=True)
        st.metric("–û–ø—Ç–∏–º–∏—Å—Ç–∏—á–Ω—ã–π", f"{result['if_forecasts']['optimistic']:.2f}")
        st.markdown('</div>', unsafe_allow_html=True)
    
    # –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ –¥–ª—è CiteScore
    st.subheader("üìä CiteScore 2025")
    
    col1, col2, col3 = st.columns(3)
    
    with col1:
        st.metric("–¢–µ–∫—É—â–∏–π CiteScore", f"{result['current_citescore']:.2f}")
    
    with col2:
        st.metric("–°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ–≥–Ω–æ–∑", f"{result['citescore_forecasts']['balanced']:.2f}")
    
    with col3:
        st.metric("–°—Ç–∞—Ç—å–∏ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞", f"{result['total_articles_cs']}")

def display_statistics(result):
    """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
    
    st.subheader("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å—Ç–∞—Ç—å—è–º")
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª—è –∏–º–ø–∞–∫—Ç-—Ñ–∞–∫—Ç–æ—Ä–∞
    if result['if_citation_data']:
        st.markdown("#### –î–ª—è –∏–º–ø–∞–∫—Ç-—Ñ–∞–∫—Ç–æ—Ä–∞")
        df_if = pd.DataFrame(result['if_citation_data'])
        if_stats = df_if.groupby('–ì–æ–¥ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏')['–¶–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏—è'].agg([
            ('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–∞—Ç–µ–π', 'count'),
            ('–í—Å–µ–≥–æ —Ü–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏–π', 'sum'),
            ('–°—Ä–µ–¥–Ω–µ–µ —Ü–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏–π', 'mean'),
            ('–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ', 'std')
        ]).round(2)
        st.dataframe(if_stats, use_container_width=True)
    else:
        st.info("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ —Å—Ç–∞—Ç—å—è—Ö –¥–ª—è –∏–º–ø–∞–∫—Ç-—Ñ–∞–∫—Ç–æ—Ä–∞")
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª—è CiteScore
    if result['cs_citation_data']:
        st.markdown("#### –î–ª—è CiteScore")
        df_cs = pd.DataFrame(result['cs_citation_data'])
        cs_stats = df_cs.groupby('–ì–æ–¥ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏')['–¶–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏—è'].agg([
            ('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–∞—Ç–µ–π', 'count'),
            ('–í—Å–µ–≥–æ —Ü–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏–π', 'sum'),
            ('–°—Ä–µ–¥–Ω–µ–µ —Ü–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏–π', 'mean'),
            ('–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ', 'std')
        ]).round(2)
        st.dataframe(cs_stats, use_container_width=True)
    else:
        st.info("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ —Å—Ç–∞—Ç—å—è—Ö –¥–ª—è CiteScore")

def display_parameters(result):
    """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Ä–∞—Å—á–µ—Ç–∞"""
    
    st.subheader("‚öôÔ∏è –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Ä–∞—Å—á–µ—Ç–∞")
    
    col1, col2 = st.columns(2)
    
    with col1:
        st.markdown("**–ü–µ—Ä–∏–æ–¥—ã —Ä–∞—Å—á–µ—Ç–∞:**")
        st.write(f"- –ò–º–ø–∞–∫—Ç-—Ñ–∞–∫—Ç–æ—Ä: {result['if_publication_years'][0]}-{result['if_publication_years'][1]}")
        st.write(f"- CiteScore: {result['cs_publication_years'][0]}-{result['cs_publication_years'][-1]}")
        
        st.markdown("**–ê–Ω–∞–ª–∏–∑ —Å–∞–º–æ—Ü–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏–π:**")
        st.write(f"- –£—Ä–æ–≤–µ–Ω—å —Å–∞–º–æ—Ü–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏–π: {result['self_citation_rate']:.1%}")
        st.write(f"- –ü—Ä–∏–º–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: {result['total_self_citations']}")
    
    with col2:
        st.markdown("**–î–∞—Ç–∞ –∞–Ω–∞–ª–∏–∑–∞:**")
        st.write(result['analysis_date'].strftime('%d.%m.%Y'))
        
        st.markdown("**–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã –ø—Ä–æ–≥–Ω–æ–∑–∞:**")
        st.write(f"- –ö–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω—ã–π: {result['multipliers']['conservative']:.2f}x")
        st.write(f"- –°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π: {result['multipliers']['balanced']:.2f}x")
        st.write(f"- –û–ø—Ç–∏–º–∏—Å—Ç–∏—á–Ω—ã–π: {result['multipliers']['optimistic']:.2f}x")

if __name__ == "__main__":
    main()
